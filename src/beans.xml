<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
      http://www.springframework.org/schema/context    
      http://www.springframework.org/schema/context/spring-context.xsd    
      http://www.springframework.org/schema/aop  
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
      http://www.springframework.org/schema/tx  
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
      http://www.springframework.org/schema/mvc    
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"

	default-autowire="no" default-lazy-init="true">
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<!-- 属性文件读入 -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <list> <value>classpath*:config/*.properties</value> 
		</list> </property> </bean> -->
	
	<!-- 数据源定义,使用dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://120.27.105.82:3306/mybirds"></property>
		<!-- <property name="url"
			value="jdbc:mysql://www.aunnyair.top:3306/mybirds?useUnicode=true&amp;characterEncoding=UTF-8"></property> -->
		<property name="username" value="root"></property>
		<!-- <property name="password" value="Hehaif4Hehaif4"></property> -->
		<property name="password" value="root"></property>
	</bean>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		abstract="false" lazy-init="false" autowire="default">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- 配置验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">yes</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">blue</prop>
						<prop key="kaptcha.image.width">100</prop>
						<prop key="kaptcha.image.height">25</prop>
						<prop key="kaptcha.textproducer.font.size">22</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.noise.color">red</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<!-- <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop> -->
						<prop key="kaptcha.textproducer.char.space">8</prop>
						<!-- kaptcha.border 是否有边框 默认为true 我们可以自己设置yes，no kaptcha.border.color 
							边框颜色 默认为Color.BLACK kaptcha.border.thickness 边框粗细度 默认为1 kaptcha.producer.impl 
							验证码生成器 默认为DefaultKaptcha kaptcha.textproducer.impl 验证码文本生成器 默认为DefaultTextCreator 
							kaptcha.textproducer.char.string 验证码文本字符内容范围 默认为abcde2345678gfynmnpwx kaptcha.textproducer.char.length 
							验证码文本字符长度 默认为5 kaptcha.textproducer.font.names 验证码文本字体样式 默认为new Font("Arial", 
							1, fontSize), new Font("Courier", 1, fontSize) kaptcha.textproducer.font.size 
							验证码文本字符大小 默认为40 kaptcha.textproducer.font.color 验证码文本字符颜色 默认为BLACK kaptcha.textproducer.char.space 
							验证码文本字符间距 默认为2 kaptcha.noise.impl 验证码噪点生成对象 默认为DefaultNoise kaptcha.noise.color 
							验证码噪点颜色 默认为Color.BLACK kaptcha.obscurificator.impl 验证码样式引擎 默认为WaterRipple 
							kaptcha.word.impl 验证码文本字符渲染 默认为DefaultWordRenderer kaptcha.background.impl 
							验证码背景生成器 默认为DefaultBackground kaptcha.background.clear.from 验证码背景颜色渐进 默认为Color.LIGHT_GRAY 
							kaptcha.background.clear.to 验证码背景颜色渐进 默认为Color.WHITE kaptcha.image.width 
							验证码图片宽度 默认为200 kaptcha.image.height 验证码图片高度 默认为50 -->

					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<!-- 配置验证码 -->
	<bean id="audioDao" class="com.ue.dao.AudioDaoImp">
		<property name="template">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>

	<bean id="commentDao" class="com.ue.dao.CommentDaoImp">
		<property name="template">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>

	<bean id="commentService" class="com.ue.service.CommentServiceImp">
	</bean>

	<bean id="userDao" class="com.ue.dao.UserDaoImp">
		<property name="template">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>
	<bean id="audioService" class="com.ue.service.AudioServiceImp">
		<!-- <property name="audioDao">
			<ref bean="audioDao" />
		</property> -->
	</bean>
	<bean id="userService" class="com.ue.service.UserServiceImp">
		<!-- <property name="userDao">
			<ref bean="userDao" />
		</property> -->
	</bean>

	<bean id="eventDao" class="com.ue.dao.EventDaoImp">
		<property name="template">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>
	<bean id="eventService" class="com.ue.service.EventServiceImp">
	</bean>

	<bean id="eventCommentUserService" class="com.ue.service.EventCommentUserServiceImp"></bean>

</beans>  